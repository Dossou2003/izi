# Generated by Django 5.0.8 on 2024-08-22 11:52

import datetime
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
            ],
            options={
                'verbose_name': 'Panier',
                'verbose_name_plural': 'Paniers',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la catégorie')),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name="Titre de l'épisode")),
                ('video', models.FileField(upload_to='course_videos/', verbose_name='Vidéo')),
                ('description', models.TextField(verbose_name='Description')),
                ('duration', models.DurationField(verbose_name='Durée')),
                ('difficulty_level', models.CharField(choices=[('débutant', 'Débutant'), ('intermédiaire', 'Intermédiaire'), ('avancé', 'Avancé')], max_length=20, verbose_name='Niveau de difficulté')),
                ('release_date', models.DateField(verbose_name='Date de sortie')),
                ('episode_number', models.PositiveIntegerField(verbose_name="Numéro de l'épisode")),
                ('transcript', models.TextField(blank=True, null=True, verbose_name='Transcription')),
                ('preview_video', models.URLField(blank=True, null=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnails/')),
            ],
            options={
                'verbose_name': 'Cours',
                'verbose_name_plural': 'Cours',
            },
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialty', models.CharField(max_length=100, verbose_name='Spécialité')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Tarif horaire')),
                ('availability', models.CharField(max_length=200, verbose_name='Disponibilités')),
                ('number_courses', models.PositiveIntegerField(default=0, verbose_name='Nombre de cours')),
                ('average_rating', models.FloatField(default=0.0, verbose_name='Note moyenne')),
                ('bio', models.TextField(blank=True, verbose_name='Biographie')),
                ('qualifications', models.TextField(blank=True, verbose_name='Qualifications')),
            ],
            options={
                'verbose_name': 'Mentor',
                'verbose_name_plural': 'Mentors',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nom du produit')),
                ('description', models.TextField(verbose_name='Description du produit')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix')),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Titre du document')),
                ('file', models.FileField(upload_to='reference_documents/', verbose_name='Fichier')),
            ],
            options={
                'verbose_name': 'Document de référence',
                'verbose_name_plural': 'Documents de référence',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la salle')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Salle',
                'verbose_name_plural': 'Salles',
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='Début de la conversation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Conversation',
                'verbose_name_plural': 'Conversations',
            },
        ),
        migrations.CreateModel(
            name='ConversationMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(choices=[('user', 'Utilisateur'), ('rag', 'RAG')], max_length=20, verbose_name='Expéditeur')),
                ('content', models.TextField(verbose_name='Contenu du message')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Horodatage')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='IziSkill.conversation')),
            ],
            options={
                'verbose_name': 'Message de conversation',
                'verbose_name_plural': 'Messages de conversation',
            },
        ),
        migrations.CreateModel(
            name='Learner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_study_time', models.DurationField(default=datetime.timedelta(0), verbose_name="Temps total d'étude")),
                ('target_points', models.PositiveIntegerField(default=0, verbose_name='Objectif de points')),
                ('level', models.CharField(choices=[('Débutant', 'Débutant'), ('Intermédiaire', 'Intermédiaire'), ('Avancé', 'Avancé')], default='Débutant', max_length=50, verbose_name='Niveau')),
                ('enrolled_courses', models.ManyToManyField(blank=True, related_name='enrolled_learners', to='IziSkill.course', verbose_name='Cours inscrits')),
                ('interests', models.ManyToManyField(blank=True, to='IziSkill.category', verbose_name='Intérêts')),
            ],
            options={
                'verbose_name': 'Apprenant',
                'verbose_name_plural': 'Apprenants',
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre du devoir')),
                ('description', models.TextField(verbose_name='Description')),
                ('due_date', models.DateTimeField(verbose_name="Date d'échéance")),
                ('status', models.CharField(choices=[('en cours', 'En cours'), ('soumis', 'Soumis'), ('noté', 'Noté')], default='en cours', max_length=20, verbose_name='Statut')),
                ('created_at', models.DateTimeField(default=datetime.datetime(2024, 1, 1, 0, 0))),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IziSkill.course', verbose_name='Cours associé')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='IziSkill.learner', verbose_name='Apprenant')),
            ],
            options={
                'verbose_name': 'Devoir',
                'verbose_name_plural': 'Devoirs',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='instructor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='IziSkill.mentor'),
        ),
        migrations.CreateModel(
            name='MentorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, verbose_name='Biographie')),
                ('qualifications', models.TextField(blank=True, verbose_name='Qualifications')),
                ('experience_years', models.PositiveIntegerField(blank=True, null=True, verbose_name="Années d'expérience")),
                ('linkedin_url', models.URLField(blank=True, null=True, verbose_name='Profil LinkedIn')),
                ('website_url', models.URLField(blank=True, null=True, verbose_name='Site web personnel')),
                ('mentor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='IziSkill.mentor', verbose_name='Mentor')),
            ],
            options={
                'verbose_name': 'Profil de mentor',
                'verbose_name_plural': 'Profils de mentors',
            },
        ),
        migrations.CreateModel(
            name='PointProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_points', models.PositiveIntegerField(default=0, verbose_name='Points actuels')),
                ('target_points', models.PositiveIntegerField(default=0, verbose_name='Objectif de points')),
                ('learner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='progression_points', to='IziSkill.learner')),
            ],
            options={
                'verbose_name': 'Progression des points',
                'verbose_name_plural': 'Progressions des points',
            },
        ),
        migrations.AddField(
            model_name='learner',
            name='point_progress',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='learner_progress', to='IziSkill.pointprogress'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantité')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='IziSkill.cart', verbose_name='Panier')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IziSkill.product', verbose_name='Produit')),
            ],
            options={
                'verbose_name': 'Article de panier',
                'verbose_name_plural': 'Articles de panier',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom de la ressource')),
                ('file', models.FileField(blank=True, null=True, upload_to='resources/', verbose_name='Fichier')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Lien externe')),
                ('resource_type', models.CharField(choices=[('pdf', 'PDF'), ('link', 'Lien externe')], max_length=20, verbose_name='Type de ressource')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='IziSkill.course', verbose_name='Cours associé')),
            ],
            options={
                'verbose_name': 'Ressource',
                'verbose_name_plural': 'Ressources',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Contenu du message')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='IziSkill.room', verbose_name='Salle de chat')),
            ],
            options={
                'verbose_name': 'Message de chat',
                'verbose_name_plural': 'Messages de chat',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='Heure de début')),
                ('duration', models.DurationField(verbose_name='Durée')),
                ('pricing', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix')),
                ('status_session', models.CharField(choices=[('planifiée', 'Planifiée'), ('en cours', 'En cours'), ('terminée', 'Terminée')], max_length=20, verbose_name='Statut de la session')),
                ('payment_status', models.CharField(choices=[('en attente', 'En attente'), ('payé', 'Payé'), ('remboursé', 'Remboursé')], default='en attente', max_length=20, verbose_name='Statut du paiement')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='IziSkill.learner', verbose_name='Apprenant')),
                ('mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mentored_sessions', to='IziSkill.mentor', verbose_name='Mentor')),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
            },
        ),
        migrations.CreateModel(
            name='PaymentService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(max_length=50, verbose_name='Type de service')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix')),
                ('payment_means', models.CharField(choices=[('carte', 'Carte'), ('mobile', 'Mobile')], max_length=50, verbose_name='Moyen de paiement')),
                ('status', models.CharField(choices=[('en attente', 'En attente'), ('payé', 'Payé'), ('remboursé', 'Remboursé')], default='en attente', max_length=20, verbose_name='Statut du paiement')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='IziSkill.learner', verbose_name='Apprenant')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='IziSkill.session', verbose_name='Session associée')),
            ],
            options={
                'verbose_name': 'Service de paiement',
                'verbose_name_plural': 'Services de paiement',
                'db_table': 'payment_service',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la sous-catégorie (Saison)')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_categories', to='IziSkill.category', verbose_name='Catégorie parente')),
            ],
            options={
                'verbose_name': 'Saison',
                'verbose_name_plural': 'Saisons',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='sub_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='IziSkill.subcategory', verbose_name='Saison'),
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='submissions/', verbose_name='Fichier soumis')),
                ('submitted_on', models.DateTimeField(auto_now_add=True, verbose_name='Date de soumission')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='IziSkill.assignment', verbose_name='Devoir associé')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='IziSkill.learner', verbose_name='Apprenant')),
            ],
            options={
                'verbose_name': 'Soumission',
                'verbose_name_plural': 'Soumissions',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(verbose_name='Note')),
                ('feedback', models.TextField(blank=True, verbose_name='Commentaires')),
                ('submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='grade', to='IziSkill.submission', verbose_name='Soumission associée')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name="Nom d'utilisateur")),
                ('password', models.CharField(max_length=255, verbose_name='Mot de passe')),
                ('status', models.CharField(choices=[('mentor', 'Mentor'), ('apprenant', 'Apprenant')], max_length=10, verbose_name='Statut')),
                ('image', models.ImageField(blank=True, upload_to='images/', verbose_name='Image de profil')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Adresse e-mail')),
                ('points', models.PositiveIntegerField(default=0, verbose_name='Points')),
                ('custom_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Identifiant personnalisé')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group', verbose_name='Groupes')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set_permissions', to='auth.permission', verbose_name='Permissions utilisateur')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom de la tâche')),
                ('due_time', models.DateTimeField(verbose_name='Échéance')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Tâche terminée ?')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='IziSkill.course', verbose_name='Cours associé')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IziSkill.user', verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Tâche',
                'verbose_name_plural': 'Tâches',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('bug', 'Bug'), ('suggestion', 'Suggestion'), ('feedback', 'Retour')], max_length=20, verbose_name='Type de rapport')),
                ('description', models.TextField(verbose_name='Description')),
                ('submitted_on', models.DateTimeField(auto_now_add=True, verbose_name='Date de soumission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IziSkill.user', verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Rapport',
                'verbose_name_plural': 'Rapports',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Contenu du message')),
                ('sent_at', models.DateTimeField(auto_now_add=True, verbose_name='Envoyé le')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='IziSkill.user', verbose_name='Destinataire')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='IziSkill.user', verbose_name='Expéditeur')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
            },
        ),
        migrations.AddField(
            model_name='mentor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='IziSkill.user', verbose_name='Utilisateur'),
        ),
        migrations.AddField(
            model_name='learner',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='IziSkill.user', verbose_name='Utilisateur'),
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom du fichier')),
                ('file', models.FileField(upload_to='uploads/', verbose_name='Fichier')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de téléchargement')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='IziSkill.course', verbose_name='Cours associé')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IziSkill.user', verbose_name='Téléchargé par')),
            ],
            options={
                'verbose_name': 'Fichier',
                'verbose_name_plural': 'Fichiers',
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='IziSkill.user', verbose_name='Utilisateur'),
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('étude', 'Étude'), ('examen', 'Examen')], max_length=20, verbose_name="Type d'activité")),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='Heure de début')),
                ('end_time', models.DateTimeField(verbose_name='Heure de fin')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='IziSkill.course', verbose_name='Cours associé')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IziSkill.user', verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Activité',
                'verbose_name_plural': 'Activités',
            },
        ),
        migrations.CreateModel(
            name='VideoChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recording_url', models.URLField(blank=True, null=True, verbose_name="URL de l'enregistrement")),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Durée')),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='IziSkill.session')),
            ],
            options={
                'verbose_name': 'Chat vidéo',
                'verbose_name_plural': 'Chats vidéo',
            },
        ),
        migrations.AddField(
            model_name='session',
            name='video_chat',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='session_video', to='IziSkill.videochat', verbose_name='Chat vidéo'),
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True, verbose_name="Date d'inscription")),
                ('date_completed', models.DateTimeField(blank=True, null=True, verbose_name="Date d'achèvement")),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IziSkill.course', verbose_name='Cours')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='IziSkill.learner', verbose_name='Apprenant')),
            ],
            options={
                'verbose_name': 'Inscription',
                'verbose_name_plural': 'Inscriptions',
                'unique_together': {('learner', 'course')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('sub_category', 'episode_number')},
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(verbose_name='Note')),
                ('comment', models.TextField(blank=True, verbose_name='Commentaire')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='IziSkill.mentor', verbose_name='Mentor évalué')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IziSkill.user', verbose_name='Utilisateur évaluateur')),
            ],
            options={
                'verbose_name': 'Évaluation',
                'verbose_name_plural': 'Évaluations',
                'unique_together': {('mentor', 'user')},
            },
        ),
    ]
